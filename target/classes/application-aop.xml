<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 声明一个需要织入到虚拟切面的逻辑（切面） -->
	<bean id="logAspect" class="xwy.aop.aspect.LogAspect"/>
	
	<!-- <aop:config>
		<aop:aspect ref="logAspect">
			切点（具体的方法声明）
			Spring表达式的强大功能
			<aop:pointcut expression="execution(*xwy.aop.service..*(..))" id="logPointCut"/>
			不是按这个顺序通知的，是根据具体配置
			<aop:before method="before" pointcut-ref="logPointCut"/>
			<aop:after-returning method="afterReturn" pointcut-ref="logPointCut"/>
			<aop:after-throwing method="afterThrow" pointcut-ref="logPointCut" />
			<aop:after method="after" pointcut-ref="logPointCut" />
		</aop:aspect>
	</aop:config> -->
	
</beans>